package com.bms.controller.schedule;


import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.bms.dto.menu.MenuVO;
import com.bms.dto.schedule.ScheduleJsonDTO;
import com.bms.dto.schedule.ScheduleSortCodeVO;
import com.bms.dto.schedule.ScheduleVO;
import com.bms.service.menu.MenuService;
import com.bms.service.schedule.ScheduleService;

import net.sf.json.JSONArray;



@Controller
@RequestMapping("/mypage/schedule_management/")
public class ScheduleContoller {
	@Autowired
	private MenuService menuService;
	
	@RequestMapping(value="superintendent", method=RequestMethod.GET)
	public ModelAndView getMain_sueprintendent(ModelAndView mnv) throws Exception {
		
		String url = "schedule/schedule.manager";
		List<MenuVO> menuList5 = menuService.selectUnderMenu("MENU05");
		List<MenuVO> menuList6 = menuService.selectUnderMenu("MENU06");
		List<MenuVO> menuList7 = menuService.selectUnderMenu("MENU07");
		List<MenuVO> menuList8 = menuService.selectUnderMenu("MENU08");

		mnv.addObject("menuList5", menuList5);
		mnv.addObject("menuList6", menuList6);
		mnv.addObject("menuList7", menuList7);
		mnv.addObject("menuList8", menuList8);
		mnv.setViewName(url);
		
		return mnv;

	}
	
	@RequestMapping(value="resident", method=RequestMethod.GET)
	public ModelAndView getMain_resident(ModelAndView mnv) throws Exception {
		String url = "schedule/schedule.resident";
		List<MenuVO> menuList9 = menuService.selectUnderMenu("MENU09");
		List<MenuVO> menuList10 = menuService.selectUnderMenu("MENU10");
		List<MenuVO> menuList11 = menuService.selectUnderMenu("MENU11");

		mnv.addObject("menuList9", menuList9);
		mnv.addObject("menuList10", menuList10);
		mnv.addObject("menuList11", menuList11);
		mnv.setViewName(url);
		
		return mnv;

	}
	
	@Autowired
	private ScheduleService scheduleService;

	@RequestMapping(value="superintendent/test", method=RequestMethod.GET)
	public String getCalendar(Model model) throws Exception {
		String url = "schedule/schedule";
		// 여기!! 캘린더에 일정 출력하는 내용
		List<ScheduleVO> allSchedule = scheduleService.myAllSchedule("333333");
		List<ScheduleJsonDTO> jsonList = new ArrayList<ScheduleJsonDTO>();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		for (ScheduleVO sv : allSchedule) {
			if (sv.getSchedule_end_date() != null && sv.getSchedule_start_date() != null & sv.getSchedule_name() != null) {
				ScheduleJsonDTO sd = new ScheduleJsonDTO(sv.getSchedule_name(), sdf.format(sv.getSchedule_start_date()), sdf.format(sv.getSchedule_end_date()));
				jsonList.add(sd);
			}
		} 
		
		// todoList출력하는 내용 
		List<ScheduleVO> allToDoList = scheduleService.myAllToDoList("333333");
		
		
		model.addAttribute("jsonList", JSONArray.fromObject(jsonList));
		model.addAttribute("allToDoList", allToDoList);
		return url;
		
	}
	
	@RequestMapping(value="resident/test", method=RequestMethod.GET)
	public ModelAndView getCalendar2(ModelAndView mnv) throws Exception {
		String url = "schedule/schedule";
		
		/*List<ScheduleVO> allSchedule = scheduleService.myAllSchedule("333333");
		mnv.addObject("allSchedule", allSchedule);
		*/
		
		List<ScheduleVO> allToDoList = scheduleService.myAllToDoList("333333");
		mnv.addObject("allToDoList",allToDoList);
		
		mnv.setViewName(url);
		
		return mnv;
		
	}
	//없네
	
	//리턴 = 데이터 그렇다는것은 화면을 불러올수없는거네
	//ㅇㅇ 데이터만 넘겨줄때 쓰는거임 ajaxㅇㅋ 존나편리하게도 리턴에 데이터만 넣어줘도 되는건 데이터바인드라는 라이브러리를 사용하고있기때문임
	//다른데가서 똑같이해도 안된다 = 라이브러리점검
	
	//나머지는알아서공부할수잇을듯 충분히ㅎㅎ 그리고 모델엔뷰 안쓴다고 들음
	//쓸이유가 없기때문
	//걍 보이드쓰믄 대자나
	//model 쓰고 나는 Post로 요청할때 mode쓰고 void하고 GEt으로 요청할때엔 modelandview쓴다고생각했음.
	//걍 강단하게 getMapping PostMapping이라는 어노테이션도 있꼬 (여기엔라이브러리추가안대잇음)
	//모델엔뷰 쓸이유전혀없음 코드만졸라길어짐 그럼
	@RequestMapping(value="/toJson", method=RequestMethod.GET)//메서드안에 get,post설정만해줘도 충분
	@ResponseBody// 이새끼있으면 이 컨트롤러는 '응답전용이다'라는뜻
	public void getCalendarJson() throws Exception {
		
		
		
	}
	
	
	
	
	/*@RequestMapping(value="/addSchedule", method=RequestMethod.GET)
	public ModelAndView getAddSchedule(ModelAndView mnv) throws Exception {
		String url = "schedule/addSchedule";
		
		
		List<ScheduleSortCodeVO> scheduleSortcodeList = scheduleService.myScheduleSortCode("333333");
		mnv.addObject("scheduleSortcodeList", scheduleSortcodeList);
		mnv.setViewName(url);
		
		return mnv;
	//얘자나 지금 데이터채워주는애 ㅇㅇㅇ	헐 들어와있음/. ㅇㅇㅇ저거한줄임헐헐헐아니
	 * 잠깐만 그 jsp에서는 요청한 페이지가/addSchedule 이거자나 ㅇㅇ근데 얘가 뭘알고 jsp를꺼내주냔말이지 
	}*/
	
	@RequestMapping(value="/addSchedule", method=RequestMethod.GET)
	public ModelAndView getAddSchedule(ModelAndView mnv) throws Exception {
		String url = "/schedule/addSchedule";
		mnv.addObject("scheduleSortcodeList",scheduleService.myScheduleSortCode("333333"));
		mnv.setViewName(url);
		return mnv;
	}
	
	@RequestMapping(value="/addSchedule", method=RequestMethod.POST)
	public String addSchedule(ScheduleVO schedule, Model model) throws Exception {
		String url = "schedule/addSchedule_ok";
		
		
		//System.out.println("schedule.getSchedule_isallday() : " + schedule.getSchedule_isallday());
		scheduleService.insertSchedule(schedule);
		
		model.addAttribute("schedule", schedule);
		//System.out.println("schedule.getSchedule_name() : " + schedule.getSchedule_name());
		return url;
		
	}
	
	@RequestMapping(value="/addToDoList", method=RequestMethod.GET)
	public ModelAndView getAddToDoList(ModelAndView mnv) throws Exception {
		String url = "/schedule/addToDoList";
		mnv.addObject("scheduleSortcodeList",scheduleService.myScheduleSortCode("333333"));
		mnv.setViewName(url);
		return mnv;
	}
	@RequestMapping(value="/addToDoList", method=RequestMethod.POST)
	public String addToDoList(ScheduleVO schedule, Model model) throws Exception {
		String url = "schedule/addToDoList_ok";
		
		System.out.println("schedule.getSchedule_isallday() : " + schedule.getSchedule_isallday());
		scheduleService.insertSchedule(schedule);
		
		model.addAttribute("schedule", schedule);
		System.out.println("schedule.getSchedule_name() : " + schedule.getSchedule_name());
		return url;
		
	}
}
