package com.bms.service.stock;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;

import com.bms.dao.stock.StockDao;
import com.bms.dto.stock.StockVO;
import com.bms.request.paging.PageMaker;
import com.bms.request.paging.SearchCriteria;

public class StockServiceImpl implements StockService {
	
	@Autowired
	private StockDao stockDao;
	public void setStockDao(StockDao stockDao) {
		this.stockDao = stockDao;
	}
	
	@Override
	public List<StockVO> selectStockList() throws SQLException {
		List<StockVO> stockList = stockDao.selectStockList();
		return stockList;
	}

	@Override
	public void insertStock(StockVO stock) throws SQLException {
		int itemCodeSequence = stockDao.selectHoldingItemCodeSequence();
		
		String item_code = "stock" + itemCodeSequence;
		stock.setItem_code(item_code);
		
		stockDao.insertStock(stock);
	}

	@Override
	public StockVO getStockByItemCode(String item_code) throws SQLException {
		StockVO stock = stockDao.getStockByItemCode(item_code);
		return stock;
	}

	@Override
	public void modifyStock(StockVO stock) throws SQLException {
		stockDao.modifyStock(stock);
	}

	@Override
	public void deleteStock(String item_code) throws SQLException {
		stockDao.deleteStock(item_code);
	}

	@Override
	public Map<String, Object> getStockList(SearchCriteria cri) throws SQLException {
		Map<String,Object> dataMap=new HashMap<String,Object>();
		
		//현재 page 번호에 맞는 리스트를 perPageNum 개수 만큼 가져오기.
		List<StockVO> stockList=stockDao.selectStockListCriteria(cri);
		
		//전체 board 개수
		int totalCount=stockDao.selectStockListCriteriaCount(cri);
		
		//PageMaker 생성.
		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		pageMaker.setTotalCount(totalCount);
		
		dataMap.put("stockList", stockList);
		dataMap.put("pageMaker",pageMaker);
		
		
		return dataMap;
	}	
}
