<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- "resources는 sequeiry 안한다." -->
	<http pattern="/resources/**" security="none"/>
	
	
	<authentication-manager>
		<!-- 인증  -->
		<authentication-provider>
		
			<!-- JDBC 이용할것임. 여기에바로 쿼리문작성. 좋은방법은 아님. 컬럼명맞춰서줘야하는데, jdbc에서 username으로 넘어온다고......-->
			<jdbc-user-service data-source-ref="dataSource"
							   users-by-username-query="select id as username, pwd as password,enabled from employee where id = ?"
							   authorities-by-username-query="select id as username, authority from employee where id=?"
			/>
		</authentication-provider>
	</authentication-manager>
	
	<!-- 인허가 -->
	
	<http use-expressions="true" pattern="/**">
		<access-denied-handler error-page="/security/accessDenied"/>
		<intercept-url pattern="/commons/**" access="permitAll"/>
		
		<intercept-url pattern="/board/regist*" access="hasAnyRole('ROLE_USER, ROLE_ADMIN, ROLE_SUPER, ROLE_VIP, ROLE_VVIP')"/>
		
		<intercept-url pattern="/**/regist*" access="hasAnyRole('ROLE_ADMIN, ROLE_SUPER, ROLE_VIP, ROLE_VVIP')"/>
		<intercept-url pattern="/**/modify*" access="hasAnyRole('ROLE_ADMIN, ROLE_SUPER, ROLE_VIP, ROLE_VVIP')"/>
		<intercept-url pattern="/**/remove*" access="hasAnyRole('ROLE_ADMIN, ROLE_SUPER, ROLE_VIP, ROLE_VVIP')"/>
		<intercept-url pattern="/**" access="isAuthenticated()"/>
		
		<form-login
			login-page="/commons/login"
			login-processing-url="/commons/loginPost"
			username-parameter="id"
			password-parameter="pwd"
			authentication-success-handler-ref="loginSuccessHandler"
			authentication-failure-handler-ref="LoginFailureHandler"
		/>
		<!-- default-target-url="/index.htm"  삭제. -->
		<!-- authentication-success-handler : 로그인성공시 . -->
		
		
		<logout
			logout-url="/commons/logout"
			invalidate-session="true"
			delete-cookies="JSESSIONID"
			logout-success-url="/index.htm"
		/>
		
	</http>

	<beans:bean id="loginSuccessHandler"
			 	class="com.groupware.security.LoginSuccessHandler"
			 	p:defaultTargetUrl="/index.htm"
			 	/>
	<beans:bean id="LoginFailureHandler"
			 	class="com.groupware.security.LoginFailureHandler"
			 	p:defaultFailureUrl="/commons/login"
			 	p:useForward="true"
			 	/>
</beans:beans>
