<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/aop"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	
				  
	<config>		<!-- com으로시작하고 service로끝나는 패키지의 모든메서드를 대상으로함. -->
		<pointcut expression="execution(public * com.*.service..*(..))"
				  id="servicePublicMethod"/>
				  
				  			<!-- transaction으로잡을것임. spring tx -->
		<advisor advice-ref="txAdvice"	
				 pointcut-ref="servicePublicMethod"/>		  
	</config>
	
	
	<!-- nameSpace tx로 advice를 지정한다.
		어떤 메서드에대해서 어떤예외처리상황에서 롤백한다. / 우선순위는 특별한애들먼저. 해당없으면 * 가 실행될것임.
		read-only : 아무것도하지말고 읽기만하렴. get은 select밖에없어서. rollback잡아도 문제는 안생김.
		reqiured : 필요할때마다 새로만들어라??? -->
		
												<!-- 얘도 spring jdbc세트라고하신것같음. -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"/>
			<tx:method name="regist*" rollback-for="Exception"/>
			<tx:method name="modify*" rollback-for="Exception"/>
			<tx:method name="remove*" rollback-for="Exception"/>
			<tx:method name="read*" rollback-for="Exception"/>
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
</beans:beans>
